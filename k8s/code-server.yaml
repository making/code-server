#@ load("@ytt:data", "data")
#@ namespace = data.values.namespace + "-" + data.values.suffix if data.values.suffix else data.values.namespace
#@ hostname = data.values.code_server.external_url_format.format(data.values.suffix).replace("http://","").replace("https://","").replace("-None","")

#@ if data.values.code_server.create_namespace :
apiVersion: v1
kind: Namespace
metadata:
  name: #@ namespace
#@ end
---
apiVersion: v1
kind: Service
metadata:
  name: code-server
  namespace: #@ namespace
spec:
  ports:
  - port: 3080
    name: http
    protocol: TCP
  selector:
    app: code-server
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: code-server-selfsigned-issuer
  namespace: #@ namespace
spec:
  selfSigned: { }
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: code-server-ca
  namespace: #@ namespace
spec:
  commonName: code-server-ca
  isCA: true
  issuerRef:
    kind: Issuer
    name: code-server-selfsigned-issuer
  secretName: code-server-ca
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: code-server-ca-issuer
  namespace: #@ namespace
spec:
  ca:
    secretName: code-server-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: code-server-tls
  namespace: #@ namespace
spec:
  dnsNames:
  - #@ hostname
  - #@ "code-server.{}.svc.cluster.local".format(namespace)
  - #@ "code-server.{}".format(namespace)
  - 127.0.0.1
  - localhost
  issuerRef:
    kind: Issuer
    name: code-server-ca-issuer
  secretName: code-server-tls
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: code-server
  namespace: #@ namespace
  annotations:
    #@ if/end data.values.code_server.ingress_class:
    projectcontour.io/ingress.class: #@ data.values.code_server.ingress_class   
  labels:
    #@ if/end data.values.code_server.ingress_class:
    projectcontour.io/ingress.class: #@ data.values.code_server.ingress_class 
spec:
  virtualhost:
    fqdn: #@ hostname
    tls:
      secretName: code-server-tls
  routes:
  - conditions:
    - prefix: /
    enableWebsockets: true
    services:
    - name: code-server
      port: 3080
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: code-store
  namespace: #@ namespace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: #@ data.values.code_server.storage_size
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: Password
metadata:
  name: code-server-password
  namespace: #@ namespace
spec:
  secretTemplate:
    type: Opaque
    stringData:
      password: $(value)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: code-server
  name: code-server
  namespace: #@ namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: code-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: code-server
    spec:
      initContainers:
      - name: copy-files
        image: #@ data.values.code_server.app_image
        command:
        - bash
        - -cex
        - |
          if [ ! -d /var/coder/.local/share/code-server/extensions ]; then
            mkdir -p /var/coder/.local/share/code-server
            mv /home/coder/.local/share/code-server/extensions /var/coder/.local/share/code-server/
          fi
          if [ ! -f /var/coder/.local/share/code-server/User ]; then
            mkdir -p /var/coder/.local/share/code-server/User
            cp /home/coder/.local/share/code-server/User/settings.json /var/coder/.local/share/code-server/User/
          fi
          if [ ! -f /var/coder/.bashrc ]; then
            cp /home/coder/.bashrc /var/coder/
          fi
          rm -rf /var/coder/lost+found
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/coder
          name: code-server-storage
      - name: change-own
        image: #@ data.values.code_server.change_own_image
        command: [ "/bin/chown","-R","1000:1000","/home/coder" ]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /home/coder
          name: code-server-storage
      containers:
      - name: code-server
        image: #@ data.values.code_server.app_image
        imagePullPolicy: Always
        env:
        - name: PORT
          value: "3080"
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: code-server-password
              key: password
        ports:
        - containerPort: 3080
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /home/coder
          name: code-server-storage
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: code-server-storage
        persistentVolumeClaim:
          claimName: code-store
